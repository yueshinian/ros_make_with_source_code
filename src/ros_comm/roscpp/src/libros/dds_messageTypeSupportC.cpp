// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p6
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "ros/dds_messageTypeSupportC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "ros/dds_messageTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_ROSDDS_MsgSeq_GUARD
#define _TAO_TYPECODE_ROSDDS_MsgSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        ROSDDS_MsgSeq_0 (
          ::CORBA::tk_sequence,
          &ROSDDS::_tc_Msg,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_ROSDDS_MsgSeq_0 =
        &ROSDDS_MsgSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_ROSDDS_MsgSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_ROSDDS_MsgSeq (
    ::CORBA::tk_alias,
    "IDL:ROSDDS/MsgSeq:1.0",
    "MsgSeq",
    &TAO::TypeCode::tc_ROSDDS_MsgSeq_0);
  

namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_MsgSeq =
    &_tao_tc_ROSDDS_MsgSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for ROSDDS::MsgTypeSupport.

ROSDDS::MsgTypeSupport_ptr
TAO::Objref_Traits<ROSDDS::MsgTypeSupport>::duplicate (
    ROSDDS::MsgTypeSupport_ptr p)
{
  return ROSDDS::MsgTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<ROSDDS::MsgTypeSupport>::release (
    ROSDDS::MsgTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

ROSDDS::MsgTypeSupport_ptr
TAO::Objref_Traits<ROSDDS::MsgTypeSupport>::nil (void)
{
  return ROSDDS::MsgTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ROSDDS::MsgTypeSupport>::marshal (
    const ROSDDS::MsgTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ROSDDS::MsgTypeSupport::MsgTypeSupport (void)
{}

ROSDDS::MsgTypeSupport::~MsgTypeSupport (void)
{
}

void
ROSDDS::MsgTypeSupport::_tao_any_destructor (void *_tao_void_pointer)
{
  MsgTypeSupport *_tao_tmp_pointer =
    static_cast<MsgTypeSupport *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ROSDDS::MsgTypeSupport_ptr
ROSDDS::MsgTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MsgTypeSupport::_duplicate (
      dynamic_cast<MsgTypeSupport_ptr> (_tao_objref)
    );
}

ROSDDS::MsgTypeSupport_ptr
ROSDDS::MsgTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MsgTypeSupport::_duplicate (
      dynamic_cast<MsgTypeSupport_ptr> (_tao_objref)
    );
}

ROSDDS::MsgTypeSupport_ptr
ROSDDS::MsgTypeSupport::_nil (void)
{
  return 0;
}

ROSDDS::MsgTypeSupport_ptr
ROSDDS::MsgTypeSupport::_duplicate (MsgTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ROSDDS::MsgTypeSupport::_tao_release (MsgTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ROSDDS::MsgTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ROSDDS/MsgTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* ROSDDS::MsgTypeSupport::_interface_repository_id (void) const
{
  return "IDL:ROSDDS/MsgTypeSupport:1.0";
}

::CORBA::Boolean
ROSDDS::MsgTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ROSDDS_MsgTypeSupport (
    ::CORBA::tk_local_interface,
    "IDL:ROSDDS/MsgTypeSupport:1.0",
    "MsgTypeSupport");
  

namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_MsgTypeSupport =
    &_tao_tc_ROSDDS_MsgTypeSupport;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for ROSDDS::MsgDataWriter.

ROSDDS::MsgDataWriter_ptr
TAO::Objref_Traits<ROSDDS::MsgDataWriter>::duplicate (
    ROSDDS::MsgDataWriter_ptr p)
{
  return ROSDDS::MsgDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<ROSDDS::MsgDataWriter>::release (
    ROSDDS::MsgDataWriter_ptr p)
{
  ::CORBA::release (p);
}

ROSDDS::MsgDataWriter_ptr
TAO::Objref_Traits<ROSDDS::MsgDataWriter>::nil (void)
{
  return ROSDDS::MsgDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ROSDDS::MsgDataWriter>::marshal (
    const ROSDDS::MsgDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ROSDDS::MsgDataWriter::MsgDataWriter (void)
{}

ROSDDS::MsgDataWriter::~MsgDataWriter (void)
{
}

void
ROSDDS::MsgDataWriter::_tao_any_destructor (void *_tao_void_pointer)
{
  MsgDataWriter *_tao_tmp_pointer =
    static_cast<MsgDataWriter *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ROSDDS::MsgDataWriter_ptr
ROSDDS::MsgDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MsgDataWriter::_duplicate (
      dynamic_cast<MsgDataWriter_ptr> (_tao_objref)
    );
}

ROSDDS::MsgDataWriter_ptr
ROSDDS::MsgDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MsgDataWriter::_duplicate (
      dynamic_cast<MsgDataWriter_ptr> (_tao_objref)
    );
}

ROSDDS::MsgDataWriter_ptr
ROSDDS::MsgDataWriter::_nil (void)
{
  return 0;
}

ROSDDS::MsgDataWriter_ptr
ROSDDS::MsgDataWriter::_duplicate (MsgDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ROSDDS::MsgDataWriter::_tao_release (MsgDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ROSDDS::MsgDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ROSDDS/MsgDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* ROSDDS::MsgDataWriter::_interface_repository_id (void) const
{
  return "IDL:ROSDDS/MsgDataWriter:1.0";
}

::CORBA::Boolean
ROSDDS::MsgDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ROSDDS_MsgDataWriter (
    ::CORBA::tk_local_interface,
    "IDL:ROSDDS/MsgDataWriter:1.0",
    "MsgDataWriter");
  

namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_MsgDataWriter =
    &_tao_tc_ROSDDS_MsgDataWriter;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for ROSDDS::MsgDataReader.

ROSDDS::MsgDataReader_ptr
TAO::Objref_Traits<ROSDDS::MsgDataReader>::duplicate (
    ROSDDS::MsgDataReader_ptr p)
{
  return ROSDDS::MsgDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<ROSDDS::MsgDataReader>::release (
    ROSDDS::MsgDataReader_ptr p)
{
  ::CORBA::release (p);
}

ROSDDS::MsgDataReader_ptr
TAO::Objref_Traits<ROSDDS::MsgDataReader>::nil (void)
{
  return ROSDDS::MsgDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ROSDDS::MsgDataReader>::marshal (
    const ROSDDS::MsgDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ROSDDS::MsgDataReader::MsgDataReader (void)
{}

ROSDDS::MsgDataReader::~MsgDataReader (void)
{
}

void
ROSDDS::MsgDataReader::_tao_any_destructor (void *_tao_void_pointer)
{
  MsgDataReader *_tao_tmp_pointer =
    static_cast<MsgDataReader *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ROSDDS::MsgDataReader_ptr
ROSDDS::MsgDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MsgDataReader::_duplicate (
      dynamic_cast<MsgDataReader_ptr> (_tao_objref)
    );
}

ROSDDS::MsgDataReader_ptr
ROSDDS::MsgDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MsgDataReader::_duplicate (
      dynamic_cast<MsgDataReader_ptr> (_tao_objref)
    );
}

ROSDDS::MsgDataReader_ptr
ROSDDS::MsgDataReader::_nil (void)
{
  return 0;
}

ROSDDS::MsgDataReader_ptr
ROSDDS::MsgDataReader::_duplicate (MsgDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ROSDDS::MsgDataReader::_tao_release (MsgDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ROSDDS::MsgDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ROSDDS/MsgDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* ROSDDS::MsgDataReader::_interface_repository_id (void) const
{
  return "IDL:ROSDDS/MsgDataReader:1.0";
}

::CORBA::Boolean
ROSDDS::MsgDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:72

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ROSDDS_MsgDataReader (
    ::CORBA::tk_local_interface,
    "IDL:ROSDDS/MsgDataReader:1.0",
    "MsgDataReader");
  

namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_MsgDataReader =
    &_tao_tc_ROSDDS_MsgDataReader;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgTypeSupport>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgTypeSupport>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgTypeSupport>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MsgTypeSupport_ptr _tao_elem)
  {
    MsgTypeSupport_ptr _tao_objptr =
      MsgTypeSupport::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MsgTypeSupport_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MsgTypeSupport>::insert (
        _tao_any,
        MsgTypeSupport::_tao_any_destructor,
        _tc_MsgTypeSupport,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MsgTypeSupport_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MsgTypeSupport>::extract (
          _tao_any,
          MsgTypeSupport::_tao_any_destructor,
          _tc_MsgTypeSupport,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::MsgTypeSupport_ptr _tao_elem)
{
  ROSDDS::MsgTypeSupport_ptr _tao_objptr =
    ROSDDS::MsgTypeSupport::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::MsgTypeSupport_ptr *_tao_elem)
{
  TAO::Any_Impl_T<ROSDDS::MsgTypeSupport>::insert (
      _tao_any,
      ROSDDS::MsgTypeSupport::_tao_any_destructor,
      ROSDDS::_tc_MsgTypeSupport,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ROSDDS::MsgTypeSupport_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<ROSDDS::MsgTypeSupport>::extract (
        _tao_any,
        ROSDDS::MsgTypeSupport::_tao_any_destructor,
        ROSDDS::_tc_MsgTypeSupport,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgDataWriter>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgDataWriter>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgDataWriter>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MsgDataWriter_ptr _tao_elem)
  {
    MsgDataWriter_ptr _tao_objptr =
      MsgDataWriter::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MsgDataWriter_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MsgDataWriter>::insert (
        _tao_any,
        MsgDataWriter::_tao_any_destructor,
        _tc_MsgDataWriter,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MsgDataWriter_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MsgDataWriter>::extract (
          _tao_any,
          MsgDataWriter::_tao_any_destructor,
          _tc_MsgDataWriter,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::MsgDataWriter_ptr _tao_elem)
{
  ROSDDS::MsgDataWriter_ptr _tao_objptr =
    ROSDDS::MsgDataWriter::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::MsgDataWriter_ptr *_tao_elem)
{
  TAO::Any_Impl_T<ROSDDS::MsgDataWriter>::insert (
      _tao_any,
      ROSDDS::MsgDataWriter::_tao_any_destructor,
      ROSDDS::_tc_MsgDataWriter,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ROSDDS::MsgDataWriter_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<ROSDDS::MsgDataWriter>::extract (
        _tao_any,
        ROSDDS::MsgDataWriter::_tao_any_destructor,
        ROSDDS::_tc_MsgDataWriter,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:41
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgDataReader>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgDataReader>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<ROSDDS::MsgDataReader>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MsgDataReader_ptr _tao_elem)
  {
    MsgDataReader_ptr _tao_objptr =
      MsgDataReader::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      MsgDataReader_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<MsgDataReader>::insert (
        _tao_any,
        MsgDataReader::_tao_any_destructor,
        _tc_MsgDataReader,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      MsgDataReader_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<MsgDataReader>::extract (
          _tao_any,
          MsgDataReader::_tao_any_destructor,
          _tc_MsgDataReader,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::MsgDataReader_ptr _tao_elem)
{
  ROSDDS::MsgDataReader_ptr _tao_objptr =
    ROSDDS::MsgDataReader::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::MsgDataReader_ptr *_tao_elem)
{
  TAO::Any_Impl_T<ROSDDS::MsgDataReader>::insert (
      _tao_any,
      ROSDDS::MsgDataReader::_tao_any_destructor,
      ROSDDS::_tc_MsgDataReader,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ROSDDS::MsgDataReader_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<ROSDDS::MsgDataReader>::extract (
        _tao_any,
        ROSDDS::MsgDataReader::_tao_any_destructor,
        ROSDDS::_tc_MsgDataReader,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

