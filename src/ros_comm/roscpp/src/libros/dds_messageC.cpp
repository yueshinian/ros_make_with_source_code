// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p6
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "ros/dds_messageC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/ORB_Core.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"

#if !defined (__ACE_INLINE__)
#include "dds_messageC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_ROSDDS_OCTSEQ_CS_)
#define _ROSDDS_OCTSEQ_CS_

ROSDDS::OctSeq::OctSeq (void)
{}

ROSDDS::OctSeq::OctSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Octet
      > (max)
{}

ROSDDS::OctSeq::OctSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Octet * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Octet
      >
    (max, length, buffer, release)
{}

ROSDDS::OctSeq::OctSeq (
    const OctSeq &seq)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Octet
      > (seq)
{}

ROSDDS::OctSeq::~OctSeq (void)
{}

void ROSDDS::OctSeq::_tao_any_destructor (
    void * _tao_void_pointer)
{
  OctSeq * _tao_tmp_pointer =
    static_cast<OctSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_ROSDDS_OctSeq_GUARD
#define _TAO_TYPECODE_ROSDDS_OctSeq_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        ROSDDS_OctSeq_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_octet,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_ROSDDS_OctSeq_0 =
        &ROSDDS_OctSeq_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_ROSDDS_OctSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_ROSDDS_OctSeq (
    ::CORBA::tk_alias,
    "IDL:ROSDDS/OctSeq:1.0",
    "OctSeq",
    &TAO::TypeCode::tc_ROSDDS_OctSeq_0);
  

namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_OctSeq =
    &_tao_tc_ROSDDS_OctSeq;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_ROSDDS_Msg[] =
      {
        { "message", &ROSDDS::_tc_OctSeq }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_ROSDDS_Msg (
  ::CORBA::tk_struct,
  "IDL:ROSDDS/Msg:1.0",
  "Msg",
  _tao_fields_ROSDDS_Msg,
  1);


namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_Msg =
    &_tao_tc_ROSDDS_Msg;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
ROSDDS::Msg::_tao_any_destructor (
    void *_tao_void_pointer)
{
  Msg *_tao_tmp_pointer =
    static_cast<Msg *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
  
  // Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::ROSDDS::OctSeq &_tao_elem
    )
  {
    if (0 == &_tao_elem) // Trying to de-reference NULL object
      _tao_any <<= static_cast< ::ROSDDS::OctSeq *>( 0 ); // Use non-copying insertion of a NULL
    else
      TAO::Any_Dual_Impl_T< ::ROSDDS::OctSeq>::insert_copy (
          _tao_any,
          ::ROSDDS::OctSeq::_tao_any_destructor,
          ::ROSDDS::_tc_OctSeq,
          _tao_elem
        );
  }

  // Non-copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      ::ROSDDS::OctSeq *_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::ROSDDS::OctSeq>::insert (
        _tao_any,
        ::ROSDDS::OctSeq::_tao_any_destructor,
        ::ROSDDS::_tc_OctSeq,
        _tao_elem
      );
  }

  // Extraction to non-const pointer (deprecated).
  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      ::ROSDDS::OctSeq *&_tao_elem)
  {
    return _tao_any >>= const_cast<
        const ::ROSDDS::OctSeq *&> (
        _tao_elem
      );
  }

  // Extraction to const pointer.
  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      const ::ROSDDS::OctSeq *&_tao_elem)
  {
    return
      TAO::Any_Dual_Impl_T< ::ROSDDS::OctSeq>::extract (
          _tao_any,
          ::ROSDDS::OctSeq::_tao_any_destructor,
          ::ROSDDS::_tc_OctSeq,
          _tao_elem
        );
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ROSDDS::OctSeq &_tao_elem)
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<ROSDDS::OctSeq *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<ROSDDS::OctSeq>::insert_copy (
        _tao_any,
        ROSDDS::OctSeq::_tao_any_destructor,
        ROSDDS::_tc_OctSeq,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ROSDDS::OctSeq *_tao_elem)
{
  TAO::Any_Dual_Impl_T<ROSDDS::OctSeq>::insert (
      _tao_any,
      ROSDDS::OctSeq::_tao_any_destructor,
      ROSDDS::_tc_OctSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ROSDDS::OctSeq *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ROSDDS::OctSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ROSDDS::OctSeq *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<ROSDDS::OctSeq>::extract (
        _tao_any,
        ROSDDS::OctSeq::_tao_any_destructor,
        ROSDDS::_tc_OctSeq,
        _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::ROSDDS::Msg &_tao_elem)
  {
    if (0 == &_tao_elem) // Trying to de-reference NULL object
      _tao_any <<= static_cast< ::ROSDDS::Msg *>( 0 ); // Use non-copying insertion of a NULL
    else
      TAO::Any_Dual_Impl_T< ::ROSDDS::Msg>::insert_copy (
          _tao_any,
          ::ROSDDS::Msg::_tao_any_destructor,
          ::ROSDDS::_tc_Msg,
          _tao_elem);
  }

  /// Non-copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any, ::
      ROSDDS::Msg *_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::ROSDDS::Msg>::insert (
        _tao_any,
        ::ROSDDS::Msg::_tao_any_destructor,
        ::ROSDDS::_tc_Msg,
        _tao_elem);
  }

  /// Extraction to non-const pointer (deprecated).
  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      ::ROSDDS::Msg *&_tao_elem)
  {
    return _tao_any >>= const_cast<
        const ::ROSDDS::Msg *&> (
        _tao_elem);
  }

  /// Extraction to const pointer.
  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      const ::ROSDDS::Msg *&_tao_elem)
  {
    return
      TAO::Any_Dual_Impl_T< ::ROSDDS::Msg>::extract (
          _tao_any,
          ::ROSDDS::Msg::_tao_any_destructor,
          ::ROSDDS::_tc_Msg,
          _tao_elem
        );
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ROSDDS::Msg &_tao_elem)
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<ROSDDS::Msg *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<ROSDDS::Msg>::insert_copy (
      _tao_any,
      ROSDDS::Msg::_tao_any_destructor,
      ROSDDS::_tc_Msg,
      _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ROSDDS::Msg *_tao_elem)
{
  TAO::Any_Dual_Impl_T<ROSDDS::Msg>::insert (
    _tao_any,
    ROSDDS::Msg::_tao_any_destructor,
    ROSDDS::_tc_Msg,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  ROSDDS::Msg *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ROSDDS::Msg *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ROSDDS::Msg *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<ROSDDS::Msg>::extract (
      _tao_any,
      ROSDDS::Msg::_tao_any_destructor,
      ROSDDS::_tc_Msg,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_ROSDDS_OctSeq_CPP_
#define _TAO_CDR_OP_ROSDDS_OctSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ROSDDS::OctSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ROSDDS::OctSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_ROSDDS_OctSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ROSDDS::Msg &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.message);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ROSDDS::Msg &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.message);
}

TAO_END_VERSIONED_NAMESPACE_DECL



