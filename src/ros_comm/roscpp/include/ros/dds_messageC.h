// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p6
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_DDS_MESSAGEC_FDHRBT_H_
#define _TAO_IDL_DDS_MESSAGEC_FDHRBT_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 3 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace ROSDDS
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_ROSDDS_OCTSEQ_CH_)
#define _ROSDDS_OCTSEQ_CH_

  class OctSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        OctSeq
      >
    OctSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        OctSeq
      >
    OctSeq_out;

  class  OctSeq
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    OctSeq (void);
    OctSeq ( ::CORBA::ULong max);
    OctSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer,
      ::CORBA::Boolean release = false);
    OctSeq (const OctSeq &);
    virtual ~OctSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef OctSeq_var _var_type;
    typedef OctSeq_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    OctSeq (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_OctSeq;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Msg;

  typedef
    ::TAO_Var_Var_T<
        Msg
      >
    Msg_var;

  typedef
    ::TAO_Out_T<
        Msg
      >
    Msg_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  Msg
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Msg_var _var_type;
    typedef Msg_out _out_type;

    static void _tao_any_destructor (void *);
    
    ROSDDS::OctSeq message;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Msg;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module ROSDDS

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::ROSDDS::OctSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::ROSDDS::OctSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ROSDDS::Msg>
    : public
        Var_Size_Arg_Traits_T<
            ::ROSDDS::Msg,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
   void operator<<= ( ::CORBA::Any &, const ::ROSDDS::OctSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::ROSDDS::OctSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ROSDDS::OctSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ROSDDS::OctSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const ROSDDS::OctSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, ROSDDS::OctSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ROSDDS::OctSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ROSDDS::OctSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
   void operator<<= (::CORBA::Any &, const ::ROSDDS::Msg &); // copying version
   void operator<<= (::CORBA::Any &, ::ROSDDS::Msg*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ROSDDS::Msg *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ROSDDS::Msg *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const ROSDDS::Msg &); // copying version
 void operator<<= (::CORBA::Any &, ROSDDS::Msg*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ROSDDS::Msg *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ROSDDS::Msg *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_ROSDDS_OctSeq_H_
#define _TAO_CDR_OP_ROSDDS_OctSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ROSDDS::OctSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ROSDDS::OctSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_ROSDDS_OctSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ROSDDS::Msg &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, ROSDDS::Msg &);

TAO_END_VERSIONED_NAMESPACE_DECL


#endif /* ifndef */

